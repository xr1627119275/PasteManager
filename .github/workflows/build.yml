name: Auto Build .NET Core App

on:
  push:
    tags:
      - 'v*.*.*'

#jobs:
#  build:
#    runs-on: windows-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Setup .NET Core
#        uses: actions/setup-dotnet@v1
#        with:
#          dotnet-version: 3.1.x
#
#      - name: Publish with dotnet
#        run: dotnet publish -c Release -r win-x64 --self-contained false /p:PublishSingleFile=true /p:PublishTrimmed=true
#        env:
#          DOTNET_USE_POLLING_FILE_WATCHER: 'true'
#
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: publish-win-x64
#          path: publish-win-x64/
#          
jobs:
  build:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v1
        name: Checkout Code
        
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.16.0
      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false
      - name: Install dependencies
        run: cd web-vue ; pnpm install; pnpm build
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2

      - name: Restore NuGet Packages
        run: nuget restore Project2.sln

      - name: Build and Publish Web App
        run: msbuild Project2.sln /p:Configuration=Release 

      
#      - name: Get pnpm store directory
#        shell: bash
#        run: |
#          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
#
#      - uses: actions/cache@v3
#        name: Setup pnpm cache
#        with:
#          path: ${{ env.STORE_PATH }}
#          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
#          restore-keys: |
#            ${{ runner.os }}-pnpm-store-

      

      - name: copy to release
        working-directory: web-vue
        run: xcopy.exe dist ..\Project2\bin\Release\dist\ /s/y
      
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v1.0.0
#        with:
#          name: app
#          path: Project2\bin\Release\
          
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: Project2\bin\Release\**
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
